/**
 * Yagna Payment API
 *  Invoicing and Payments is a fundamental area of Yagna Ecosystem functionality. It includes aspects of communication between Requestor, Provider and a selected Payment Platform, which becomes crucial when Activities are executed in the context of negotiated Agreements. Yagna applications must be able to exercise various payment models, and the Invoicing/Payment-related communication is happening in parallel to Activity control communication. To define functional patterns of Requestor/Provider interaction in this area, Payment API is specified.  An important principle of the Yagna Payment API is that the actual payment transactions are hidden behind the Invoice flow. In other words, a Yagna Application on Requestor side isn’t expected to trigger actual payment transactions. Instead it is expected to receive and accept Invoices raised by the Provider - based on Application’s Invoice Accept notifications, the Payment API implementation orchestrates the payment via a configured Payment platform.  **NOTE: This specification is work-in-progress.**
 *
 * The version of the OpenAPI document: 1.6.2
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { InvoiceStatus } from './invoice-status';
/**
 * An Invoice is an artifact issued by the Provider to the Requestor, in the context of a specific Agreement. It indicates the total Amount owed by the Requestor in this Agreement. No further Debit Notes shall be issued after the Invoice is issued. The issue of Invoice signals the Termination of the Agreement (if it hasn\'t been terminated already). No Activity execution is allowed after the Invoice is issued.  NOTE: An invoice can be issued even before any Activity is started in the context of an Agreement (eg. in one off, \'fire-and-forget\' payment regime).
 * @export
 * @interface Invoice
 */
export interface Invoice {
    /**
     *
     * @type {string}
     * @memberof Invoice
     */
    invoiceId: string;
    /**
     *
     * @type {string}
     * @memberof Invoice
     */
    issuerId: string;
    /**
     *
     * @type {string}
     * @memberof Invoice
     */
    recipientId: string;
    /**
     *
     * @type {string}
     * @memberof Invoice
     */
    payeeAddr?: string;
    /**
     *
     * @type {string}
     * @memberof Invoice
     */
    payerAddr?: string;
    /**
     *
     * @type {string}
     * @memberof Invoice
     */
    paymentPlatform?: string;
    /**
     *
     * @type {string}
     * @memberof Invoice
     */
    lastDebitNoteId?: string;
    /**
     *
     * @type {string}
     * @memberof Invoice
     */
    timestamp: string;
    /**
     *
     * @type {string}
     * @memberof Invoice
     */
    agreementId: string;
    /**
     *
     * @type {Array<string>}
     * @memberof Invoice
     */
    activityIds?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof Invoice
     */
    amount: string;
    /**
     *
     * @type {string}
     * @memberof Invoice
     */
    paymentDueDate: string;
    /**
     *
     * @type {InvoiceStatus}
     * @memberof Invoice
     */
    status?: InvoiceStatus;
}
