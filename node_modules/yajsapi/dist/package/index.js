"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.resolve_repo_srv = exports.VmPackage = exports.Package = exports.Constraints = exports.DEFAULT_REPO_SRV = void 0;
const axios_1 = __importDefault(require("axios"));
const srv = __importStar(require("srvclient"));
const inf_1 = require("../props/inf");
const utils_1 = require("../utils");
const FALLBACK_REPO_URL = "http://yacn2.dev.golem.network:8000";
exports.DEFAULT_REPO_SRV = "_girepo._tcp.dev.golem.network";
class Constraints {
    constructor() {
        this.inner = [];
    }
    extend(items) {
        this.inner.push.apply(this.inner, items);
    }
    toString() {
        return `(&${this.inner.join("\n\t")})`;
    }
}
exports.Constraints = Constraints;
class Package {
    async resolve_url(self) { }
    async decorate_demand(demand) { }
}
exports.Package = Package;
class VmPackage extends Package {
    constructor({ repo_url, image_hash, constraints, secure = false }) {
        super();
        this.repo_url = repo_url;
        this.image_hash = image_hash;
        this.constraints = constraints;
        this.secure = secure;
    }
    async resolve_url() {
        let resp = await axios_1.default.get(`${this.repo_url}/image.${this.image_hash}.link`);
        if (resp.status != 200)
            throw Error(`Error: ${resp.status}`);
        let image_url = await resp.data;
        const image_hash = this.image_hash;
        return `hash:sha3:${image_hash}:${image_url}`;
    }
    async decorate_demand(demand) {
        const image_url = await this.resolve_url();
        demand.ensure(this.constraints.toString());
        demand.add(new inf_1.VmRequest(image_url, inf_1.VmPackageFormat.GVMKIT_SQUASH));
    }
}
exports.VmPackage = VmPackage;
exports.resolve_repo_srv = async ({ repo_srv, fallback_url = FALLBACK_REPO_URL, }) => {
    async function _resolve_repo_srv() {
        return new Promise((resolve, reject) => {
            let verify_records = async function (err, records) {
                if (!(Symbol.iterator in Object(records))) {
                    resolve(null);
                    return;
                }
                for (let record of records) {
                    let url = `http://${record.name}:${record.port}`;
                    try {
                        await axios_1.default.head(url);
                        resolve(url);
                    }
                    catch (error) {
                        if (error.response != undefined) {
                            resolve(url);
                        }
                    }
                }
                resolve(null);
            };
            srv.getRandomTargets(repo_srv, verify_records);
        });
    }
    const repo_url = await _resolve_repo_srv();
    if (repo_url) {
        utils_1.logger.debug(`Using image repository: ${repo_srv} -> ${repo_url}.`);
        return repo_url;
    }
    utils_1.logger.warn(`Problem resolving image repository: ${repo_srv}, falling back to ${fallback_url}.`);
    return fallback_url;
};
//# sourceMappingURL=index.js.map