/**
 * Yagna Activity API
 *  The Activity API can be perceived as controls which a Requestor-side application has to steer the execution of an Activity as specified in an Agreement which has been negotiated via the Market API/Protocol. This defines possible interactions between the Requestor application (via Activity API) and the generic components running on the Provider node, which host the Provider-side application code. The possible interactions imply a logical “execution environment” component, which is the host/container for the “payload” code. The “execution environment” is specified as an ExeUnit, with a generic interface via which a Provider node’s Activity Controller can operate the hosted code. It conforms with capability level 1 of the [Activity API specification] (https://docs.google.com/document/d/1BXaN32ediXdBHljEApmznSfbuudTU8TmvOmHKl0gmQM).
 *
 * The version of the OpenAPI document: 1.6.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/**
 *
 * @export
 * @interface RuntimeEventKindStartedAllOf
 */
export interface RuntimeEventKindStartedAllOf {
    /**
     *  The specification of ExeScript commands format as per Activity API specification. Including TRANSFER command syntax extension described in [this specification](https://github.com/golemfactory/golem-architecture/blob/master/GIPS/GIP-PR0001-multifile-transfer.md). ## Implementation Notes The schemas have been defined to accept a following format of JSON command collections: ``` [ { \"deploy\": {} }, { \"start\": { \"args\": [] } }, { \"transfer\": { \"from\": \"http://34.244.4.185:8000/LICENSE\", \"to\": \"container:/input/file_in\", \"format\": \"zip\", \"depth\": 2, \"fileset\": [{\"desc\":\"all images\", \"includes\": [\"*.jpg\"], \"excludes\": [\"db*.*\"] }] } }, { \"run\": { \"entry_point\": \"rust-wasi-tutorial\", \"args\": [\"/input/file_in\", \"/output/file_cp\"] } }, { \"sign\": {} }, { \"terminate\": {} }, ... ] ``` ### Rust For Rust - this format is a default representation of Rust enum types, as serialized by `serde` library. Therefore it is recommended to use this yaml specification to manually specify Rust enum types rather than depend on automatically-generated code.
     * @type {object}
     * @memberof RuntimeEventKindStartedAllOf
     */
    started: object;
}
